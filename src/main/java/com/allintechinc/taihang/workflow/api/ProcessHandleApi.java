/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.10).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.allintechinc.taihang.workflow.api;

import com.allintechinc.taihang.form.SearchForm;
import com.allintechinc.taihang.workflow.dto.ApplyUserDto;
import com.allintechinc.taihang.workflow.dto.ProcessTaskDto;
import com.allintechinc.taihang.workflow.dto.ProcessTaskHistoryDto;
import com.allintechinc.taihang.workflow.form.ApplyUserForm;
import com.allintechinc.taihang.workflow.form.ProcessParamForm;
import com.allintechinc.taihang.workflow.form.ReviewForm;
import com.allintechinc.taihang.workflow.form.UserForm;
import org.springframework.data.domain.Page;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import javax.validation.Valid;
import java.util.List;

// Imports for Page
// Imports for SearchForm
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringConfiguration", date = "2020-05-23T11:27:28.118+08:00")

/**
 * @author code generator tool
 */
public interface ProcessHandleApi {
    /**
     * 审批通过
     *
     * @param form
     * @return Void
     */
    @RequestMapping(value = "/process/approved",
            produces = {"application/json"},
            consumes = {"application/json"},
            method = RequestMethod.POST)
    Void approved(@Valid @RequestBody ReviewForm form);

    /**
     * 驳回
     *
     * @param form
     * @return Void
     */

    @RequestMapping(value = "/process/reject",
            produces = {"application/json"},
            consumes = {"application/json"},
            method = RequestMethod.POST)
    Void reject(@Valid @RequestBody ReviewForm form);

    /**
     * 查询流程处理记录列表
     *
     * @param searchForm
     * @return Page<ProcessHandlerRecordDto>
     */
    @RequestMapping(value = "/process/search",
            method = RequestMethod.POST)
    Page<ProcessTaskHistoryDto> search(@Valid @RequestBody SearchForm searchForm);

    /**
     * 启动流程
     *
     * @param form
     * @return ProcessTaskDto
     */
    @RequestMapping(value = "/process/start",
            produces = {"application/json"},
            consumes = {"application/json"},
            method = RequestMethod.POST)
    ProcessTaskDto startProcessInstance(@Valid @RequestBody ProcessParamForm form);

    /**
     * 获取某个流程审批进度
     *
     * @param processId
     * @return List<ProcessHandlerRecordDto>
     */
    @RequestMapping(value = "/process/{processId}", method = RequestMethod.GET)
    List<ProcessTaskHistoryDto> detail(@PathVariable("processId") String processId);

    /**
     * 通过审批人信息和任务状态查询申请人列表
     *
     * @param form
     * @return List<ApplyUserDto>
     */
    @RequestMapping(value = "/process/apply_users", method = RequestMethod.POST)
    List<ApplyUserDto> getAllApplyUsers(@Valid @RequestBody ApplyUserForm form);

    /**
     * 根据任务编码获取任务审批信息
     *
     * @param taskId
     * @return ProcessHandlerRecordDto
     */
    @RequestMapping(value = "/process/apply/{taskId}", method = RequestMethod.GET)
    ProcessTaskHistoryDto findByTaskId(@PathVariable("taskId") String taskId);

    /**
     * 我的申请流程列表
     *
     * @param searchForm
     * @return Page<ProcessHandlerRecordDto>
     */
    @RequestMapping(value = "/process/owner", method = RequestMethod.POST)
    Page<ProcessTaskHistoryDto> getOwnerApprove(@Valid @RequestBody SearchForm searchForm);

    /**
     * 获取流程基本信息
     *
     * @param processInstanceId
     * @return ProcessHandlerRecordDto
     */
    @RequestMapping(value = "/process/detail/{processInstanceId}", method = RequestMethod.GET)
    ProcessTaskHistoryDto getProcess(@PathVariable("processInstanceId") String processInstanceId);

    /**
     * 查询流程定义、引擎中是否使用了该用户
     *
     * @param form
     * @return Boolean
     */
    @RequestMapping(value = "/process/find_user", method = RequestMethod.POST)
    Boolean findUserFromWorkflow(@Valid @RequestBody UserForm form);

}
