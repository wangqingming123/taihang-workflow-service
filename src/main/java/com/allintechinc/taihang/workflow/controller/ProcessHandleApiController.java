/**
 * This is auto-generated by code generator tools, DO NOT MODIFY MANUALLY!!!
 */
package com.allintechinc.taihang.workflow.controller;

import com.allintechinc.taihang.annotaions.ResponseDecorated;
import com.allintechinc.taihang.form.SearchForm;
import com.allintechinc.taihang.workflow.api.ProcessHandleApi;
import com.allintechinc.taihang.workflow.dto.ApplyUserDto;
import com.allintechinc.taihang.workflow.dto.ProcessTaskDto;
import com.allintechinc.taihang.workflow.dto.ProcessTaskHistoryDto;
import com.allintechinc.taihang.workflow.form.ApplyUserForm;
import com.allintechinc.taihang.workflow.form.ProcessParamForm;
import com.allintechinc.taihang.workflow.form.ReviewForm;
import com.allintechinc.taihang.workflow.form.UserForm;
import com.allintechinc.taihang.workflow.service.ProcessHandleRecordService;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import javax.validation.Valid;
import java.util.List;

// Imports for Page
// Imports for SearchForm

@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringConfiguration", date = "2020-05-23T11:27:28.118+08:00")

/**
 * @author code generator tool
 */
@Slf4j
@RestController
@ResponseDecorated
@RequestMapping("/api/v1")
public class ProcessHandleApiController implements ProcessHandleApi {

    @Autowired
    ProcessHandleRecordService service;

    @Override
    public Void approved(ReviewForm form) {

        return service.approved(form);
    }

    @Override
    public Void reject(ReviewForm form) {

        return service.reject(form);
    }

    @Override
    public Page<ProcessTaskHistoryDto> search(SearchForm searchForm) {

        return service.search(searchForm);
    }

    @Override
    public ProcessTaskDto startProcessInstance(ProcessParamForm form) {

        return service.startProcessInstance(form);
    }

    @Override
    public List<ProcessTaskHistoryDto> detail(String processId) {
        return service.detail(processId);
    }

    @Override
    public List<ApplyUserDto> getAllApplyUsers(ApplyUserForm form) {
        return service.getAllApplyUsers(form);
    }

    @Override
    public ProcessTaskHistoryDto findByTaskId(String taskId) {
        return service.findByTaskId(taskId);
    }

    @Override
    public Page<ProcessTaskHistoryDto> getOwnerApprove(@Valid SearchForm searchForm) {
        return service.getOwnerApprove(searchForm);
    }

    @Override
    public ProcessTaskHistoryDto getProcess(String processInstanceId) {
        return service.getProcess(processInstanceId);
    }

    @Override
    public Boolean findUserFromWorkflow(UserForm form) {
        return service.findUserFromWorkflow(form);
    }
}
